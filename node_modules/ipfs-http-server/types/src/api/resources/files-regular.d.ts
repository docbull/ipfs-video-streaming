export namespace catResource {
    namespace options {
        namespace validate {
            export namespace options_1 {
                const allowUnknown: boolean;
                const stripUnknown: boolean;
            }
            export { options_1 as options };
            export const query: any;
        }
    }
    /**
     * @param {import('../../types').Request} request
     * @param {import('@hapi/hapi').ResponseToolkit} h
     */
    function handler(request: import("@hapi/hapi").Request, h: import("@hapi/hapi").ResponseToolkit): Promise<import("@hapi/hapi").ResponseObject>;
    /**
     * @param {import('../../types').Request} request
     * @param {import('@hapi/hapi').ResponseToolkit} h
     */
    function handler(request: import("@hapi/hapi").Request, h: import("@hapi/hapi").ResponseToolkit): Promise<import("@hapi/hapi").ResponseObject>;
}
export namespace getResource {
    export namespace options_2 {
        export namespace validate_1 {
            export namespace options_3 {
                const allowUnknown_1: boolean;
                export { allowUnknown_1 as allowUnknown };
                const stripUnknown_1: boolean;
                export { stripUnknown_1 as stripUnknown };
            }
            export { options_3 as options };
            const query_1: any;
            export { query_1 as query };
        }
        export { validate_1 as validate };
    }
    export { options_2 as options };
    /**
     * @param {import('../../types').Request} request
     * @param {import('@hapi/hapi').ResponseToolkit} h
     */
    export function handler(request: import("@hapi/hapi").Request, h: import("@hapi/hapi").ResponseToolkit): Promise<import("@hapi/hapi").ResponseObject>;
    /**
     * @param {import('../../types').Request} request
     * @param {import('@hapi/hapi').ResponseToolkit} h
     */
    export function handler(request: import("@hapi/hapi").Request, h: import("@hapi/hapi").ResponseToolkit): Promise<import("@hapi/hapi").ResponseObject>;
}
export namespace addResource {
    export namespace options_4 {
        export namespace payload {
            const parse: boolean;
            const output: string;
            const maxBytes: number;
        }
        export namespace validate_2 {
            export namespace options_5 {
                const allowUnknown_2: boolean;
                export { allowUnknown_2 as allowUnknown };
                const stripUnknown_2: boolean;
                export { stripUnknown_2 as stripUnknown };
            }
            export { options_5 as options };
            const query_2: any;
            export { query_2 as query };
        }
        export { validate_2 as validate };
    }
    export { options_4 as options };
    /**
     * @param {import('../../types').Request} request
     * @param {import('@hapi/hapi').ResponseToolkit} h
     */
    export function handler(request: import("@hapi/hapi").Request, h: import("@hapi/hapi").ResponseToolkit): Promise<import("@hapi/hapi").ResponseObject>;
    /**
     * @param {import('../../types').Request} request
     * @param {import('@hapi/hapi').ResponseToolkit} h
     */
    export function handler(request: import("@hapi/hapi").Request, h: import("@hapi/hapi").ResponseToolkit): Promise<import("@hapi/hapi").ResponseObject>;
}
export namespace lsResource {
    export namespace options_6 {
        export namespace validate_3 {
            export namespace options_7 {
                const allowUnknown_3: boolean;
                export { allowUnknown_3 as allowUnknown };
                const stripUnknown_3: boolean;
                export { stripUnknown_3 as stripUnknown };
            }
            export { options_7 as options };
            const query_3: any;
            export { query_3 as query };
        }
        export { validate_3 as validate };
    }
    export { options_6 as options };
    /**
     * @param {import('../../types').Request} request
     * @param {import('@hapi/hapi').ResponseToolkit} h
     */
    export function handler(request: import("@hapi/hapi").Request, h: import("@hapi/hapi").ResponseToolkit): Promise<import("@hapi/hapi").ResponseObject>;
    /**
     * @param {import('../../types').Request} request
     * @param {import('@hapi/hapi').ResponseToolkit} h
     */
    export function handler(request: import("@hapi/hapi").Request, h: import("@hapi/hapi").ResponseToolkit): Promise<import("@hapi/hapi").ResponseObject>;
}
export namespace refsResource {
    export namespace options_8 {
        export namespace validate_4 {
            export namespace options_9 {
                const allowUnknown_4: boolean;
                export { allowUnknown_4 as allowUnknown };
                const stripUnknown_4: boolean;
                export { stripUnknown_4 as stripUnknown };
            }
            export { options_9 as options };
            const query_4: any;
            export { query_4 as query };
        }
        export { validate_4 as validate };
    }
    export { options_8 as options };
    /**
     * @param {import('../../types').Request} request
     * @param {import('@hapi/hapi').ResponseToolkit} h
     */
    export function handler(request: import("@hapi/hapi").Request, h: import("@hapi/hapi").ResponseToolkit): Promise<import("@hapi/hapi").ResponseObject>;
    /**
     * @param {import('../../types').Request} request
     * @param {import('@hapi/hapi').ResponseToolkit} h
     */
    export function handler(request: import("@hapi/hapi").Request, h: import("@hapi/hapi").ResponseToolkit): Promise<import("@hapi/hapi").ResponseObject>;
}
export namespace refsLocalResource {
    export namespace options_10 {
        export namespace validate_5 {
            export namespace options_11 {
                const allowUnknown_5: boolean;
                export { allowUnknown_5 as allowUnknown };
                const stripUnknown_5: boolean;
                export { stripUnknown_5 as stripUnknown };
            }
            export { options_11 as options };
            const query_5: any;
            export { query_5 as query };
        }
        export { validate_5 as validate };
    }
    export { options_10 as options };
    /**
     * @param {import('../../types').Request} request
     * @param {import('@hapi/hapi').ResponseToolkit} h
     */
    export function handler(request: import("@hapi/hapi").Request, h: import("@hapi/hapi").ResponseToolkit): Promise<import("@hapi/hapi").ResponseObject>;
    /**
     * @param {import('../../types').Request} request
     * @param {import('@hapi/hapi').ResponseToolkit} h
     */
    export function handler(request: import("@hapi/hapi").Request, h: import("@hapi/hapi").ResponseToolkit): Promise<import("@hapi/hapi").ResponseObject>;
}
//# sourceMappingURL=files-regular.d.ts.map