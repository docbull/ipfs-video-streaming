'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var joi = require('../../../utils/joi.js');

const statResource = {
  options: {
    validate: {
      options: {
        allowUnknown: true,
        stripUnknown: true
      },
      query: joi.object().keys({
        arg: joi.string().default('/'),
        hash: joi.boolean().default(false),
        size: joi.boolean().default(false),
        withLocal: joi.boolean().default(false),
        cidBase: joi.string().default('base58btc'),
        timeout: joi.timeout()
      })
    }
  },
  async handler(request, h) {
    const {ipfs} = request.server.app;
    const {arg, hash, size, withLocal, cidBase, timeout} = request.query;
    const stats = await ipfs.files.stat(arg, {
      hash,
      size,
      withLocal,
      signal: request.app.signal,
      timeout
    });
    const base = await ipfs.bases.getBase(cidBase);
    const output = {
      Type: stats.type,
      Blocks: stats.blocks,
      Size: stats.size,
      Hash: stats.cid.toString(base.encoder),
      CumulativeSize: stats.cumulativeSize,
      WithLocality: stats.withLocality,
      Local: stats.local,
      SizeLocal: stats.sizeLocal,
      Mtime: stats.mtime ? stats.mtime.secs : undefined,
      MtimeNsecs: stats.mtime ? stats.mtime.nsecs : undefined,
      Mode: stats.mode != null ? stats.mode.toString(8).padStart(4, '0') : undefined
    };
    return h.response(output);
  }
};

exports.statResource = statResource;
