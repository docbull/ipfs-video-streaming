'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var joi = require('../../utils/joi.js');
var itPipe = require('it-pipe');
var map = require('it-map');
var streamResponse = require('../../utils/stream-response.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var map__default = /*#__PURE__*/_interopDefaultLegacy(map);

const pingResource = {
  options: {
    validate: {
      options: {
        allowUnknown: true,
        stripUnknown: true
      },
      query: joi.object().keys({
        count: joi.number().integer().greater(0).default(10),
        peerId: joi.string().required(),
        timeout: joi.timeout()
      }).rename('arg', 'peerId', {
        override: true,
        ignoreUndefined: true
      }).rename('n', 'count', {
        override: true,
        ignoreUndefined: true
      })
    }
  },
  handler(request, h) {
    const {
      app: {signal},
      server: {
        app: {ipfs}
      },
      query: {peerId, count, timeout}
    } = request;
    return streamResponse.streamResponse(request, h, () => itPipe.pipe(ipfs.ping(peerId.toString(), {
      count,
      signal,
      timeout
    }), async function* (source) {
      yield* map__default["default"](source, pong => ({
        Success: pong.success,
        Time: pong.time,
        Text: pong.text
      }));
    }));
  }
};

exports.pingResource = pingResource;
