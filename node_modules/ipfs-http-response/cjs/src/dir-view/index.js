'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var filesize = require('filesize');
var style = require('./style.js');
var path = require('../utils/path.js');
var ejs = require('ejs');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var filesize__default = /*#__PURE__*/_interopDefaultLegacy(filesize);
var ejs__default = /*#__PURE__*/_interopDefaultLegacy(ejs);

function getParentHref(path$1) {
  const parts = path.cidArray(path$1).slice();
  if (parts.length > 1) {
    return path$1.replace(`/${ parts.pop() }`, '');
  }
  return path$1;
}
function render(path, links) {
  return ejs__default["default"].render(`<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title><%= path %></title>
  <style>${ style }</style>
</head>
<body>
  <div id="header" class="row">
    <div class="col-xs-2">
      <div id="logo" class="ipfs-logo"></div>
    </div>
  </div>
  <br>
  <div class="col-xs-12">
    <div class="panel panel-default">
      <div class="panel-heading">
        <strong>Index of <%= path %></strong>
      </div>
      <table class="table table-striped">
        <tbody>
          <tr>
            <td class="narrow">
              <div class="ipfs-icon ipfs-_blank">&nbsp;</div>
            </td>
            <td class="padding">
              <a href="<%= parentHref %>">..</a>
            </td>
            <td></td>
          </tr>
          <% links.forEach(function (link) { %>
          <tr>
            <td><div class="ipfs-icon ipfs-_blank">&nbsp;</div></td>
            <td><a href="<%= link.link %>"><%= link.name %></a></t>
            <td><%= link.size %></td>
          </td>
          </tr>
          <% }) %>
        </tbody>
      </table>
    </div>
  </div>
</body>
</html>
`, {
    path,
    links: links.map(link => ({
      name: link.Name,
      size: filesize__default["default"](link.Tsize),
      link: `${ path }${ path.endsWith('/') ? '' : '/' }${ link.Name }`
    })),
    parentHref: getParentHref(path)
  });
}

exports.render = render;
