import fileType from 'file-type';
import mime from 'mime-types';
import Reader from 'it-reader';
const minimumBytes = 4100;
export const detectContentType = async (path, source) => {
  let fileSignature;
  if (!path.endsWith('.svg')) {
    try {
      const reader = Reader(source);
      const {value, done} = await reader.next(minimumBytes);
      if (done)
        return { source: reader };
      fileSignature = await fileType.fromBuffer(value.slice());
      source = async function* () {
        yield value;
        yield* reader;
      }();
    } catch (err) {
      if (err.code !== 'ERR_UNDER_READ')
        throw err;
      source = async function* () {
        yield err.buffer;
      }();
    }
  }
  const mimeType = mime.lookup(fileSignature ? fileSignature.ext : path);
  return {
    source,
    contentType: mime.contentType(mimeType)
  };
};