export class WebSocketMessageChannel {
    /**
     * @param {import('ws')} ws
     */
    constructor(ws: import('ws'));
    _ws: import("ws");
    handler: {
        /**
         * @param {Uint8Array} buf
         */
        deserialize: (buf: Uint8Array) => {};
        /**
         * @param {any} message
         */
        serialize: (message: any) => Buffer;
    };
    source: pushable.Pushable<any>;
    sink: pushable.Pushable<any>;
    /**
     * @param {Record<string, any>} metadata
     */
    sendMetadata(metadata: Record<string, any>): void;
    /**
     * @param {object} message - A message object to send to the client
     */
    sendMessage(message: object): void;
    /**
     * @param {Error & { code?: string }} [err]
     */
    sendTrailer(err?: (Error & {
        code?: string | undefined;
    }) | undefined): void;
    /**
     * @param {Error} [err]
     */
    end(err?: Error | undefined): void;
}
import pushable from "it-pushable";
//# sourceMappingURL=web-socket-message-channel.d.ts.map