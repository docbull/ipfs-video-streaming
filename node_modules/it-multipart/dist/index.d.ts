export = multipart;
/**
 * @typedef {import('http').IncomingMessage} IncomingMessage
 * @typedef {import('http').IncomingHttpHeaders} IncomingHttpHeaders
 * @typedef {Object} Part
 * @property {IncomingHttpHeaders} headers
 * @property {AsyncIterable<Buffer>} body
 */
/**
 * Streaming multipart HTTP message parser
 *
 * @param {IncomingMessage} request
 * @returns {AsyncIterable<Part>}
 */
declare function multipart(request: IncomingMessage): AsyncIterable<Part>;
declare namespace multipart {
    export { IncomingMessage, IncomingHttpHeaders, Part };
}
type IncomingMessage = import('http').IncomingMessage;
type Part = {
    headers: IncomingHttpHeaders;
    body: AsyncIterable<Buffer>;
};
type IncomingHttpHeaders = import('http').IncomingHttpHeaders;
//# sourceMappingURL=index.d.ts.map