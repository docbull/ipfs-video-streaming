declare namespace _default {
    const command: string;
    const describe: string;
    /**
     * @param {import('yargs').Argv} yargs
     */
    function builder(yargs: import("yargs").Argv<any>): import("yargs").Argv<import("yargs").Omit<import("yargs").Omit<import("yargs").Omit<import("yargs").Omit<import("yargs").Omit<import("yargs").Omit<any, "default-config"> & {
        "default-config": string | undefined;
    }, "algorithm"> & {
        algorithm: string;
    }, "bits"> & {
        bits: number;
    }, "empty-repo"> & {
        "empty-repo": boolean | undefined;
    }, "private-key"> & {
        "private-key": string | undefined;
    }, "profile"> & {
        profile: string | undefined;
    }>;
    /**
     * @param {import('yargs').Argv} yargs
     */
    function builder(yargs: import("yargs").Argv<any>): import("yargs").Argv<import("yargs").Omit<import("yargs").Omit<import("yargs").Omit<import("yargs").Omit<import("yargs").Omit<import("yargs").Omit<any, "default-config"> & {
        "default-config": string | undefined;
    }, "algorithm"> & {
        algorithm: string;
    }, "bits"> & {
        bits: number;
    }, "empty-repo"> & {
        "empty-repo": boolean | undefined;
    }, "private-key"> & {
        "private-key": string | undefined;
    }, "profile"> & {
        profile: string | undefined;
    }>;
    /**
     * @param {object} argv
     * @param {import('../types').Context} argv.ctx
     * @param {string} argv.defaultConfig
     * @param {'rsa' | 'ed25519' | 'secp256k1'} argv.algorithm
     * @param {number} argv.bits
     * @param {boolean} argv.emptyRepo
     * @param {string} argv.privateKey
     * @param {string[]} argv.profile
     * @param {string} argv.pass
     */
    function handler(argv: {
        ctx: import("../types").Context;
        defaultConfig: string;
        algorithm: "secp256k1" | "ed25519" | "rsa";
        bits: number;
        emptyRepo: boolean;
        privateKey: string;
        profile: string[];
        pass: string;
    }): Promise<void>;
    /**
     * @param {object} argv
     * @param {import('../types').Context} argv.ctx
     * @param {string} argv.defaultConfig
     * @param {'rsa' | 'ed25519' | 'secp256k1'} argv.algorithm
     * @param {number} argv.bits
     * @param {boolean} argv.emptyRepo
     * @param {string} argv.privateKey
     * @param {string[]} argv.profile
     * @param {string} argv.pass
     */
    function handler(argv: {
        ctx: import("../types").Context;
        defaultConfig: string;
        algorithm: "secp256k1" | "ed25519" | "rsa";
        bits: number;
        emptyRepo: boolean;
        privateKey: string;
        profile: string[];
        pass: string;
    }): Promise<void>;
}
export default _default;
//# sourceMappingURL=init.d.ts.map