declare namespace _default {
    const command: string;
    const describe: string;
    namespace builder {
        namespace passout {
            export const alias: string;
            const describe_1: string;
            export { describe_1 as describe };
            export const type: string;
            export const demandOption: boolean;
        }
        namespace output {
            const alias_1: string;
            export { alias_1 as alias };
            const describe_2: string;
            export { describe_2 as describe };
            const type_1: string;
            export { type_1 as type };
            const _default: string;
            export { _default as default };
        }
        namespace timeout {
            const type_2: string;
            export { type_2 as type };
            export { parseDuration as coerce };
        }
    }
    /**
     * @param {object} argv
     * @param {import('../../types').Context} argv.ctx
     * @param {string} argv.name
     * @param {string} argv.passout
     * @param {string} argv.output
     * @param {number} argv.timeout
     */
    function handler({ ctx, name, passout, output, timeout }: {
        ctx: import("../../types").Context;
        name: string;
        passout: string;
        output: string;
        timeout: number;
    }): Promise<void>;
    /**
     * @param {object} argv
     * @param {import('../../types').Context} argv.ctx
     * @param {string} argv.name
     * @param {string} argv.passout
     * @param {string} argv.output
     * @param {number} argv.timeout
     */
    function handler({ ctx, name, passout, output, timeout }: {
        ctx: import("../../types").Context;
        name: string;
        passout: string;
        output: string;
        timeout: number;
    }): Promise<void>;
}
export default _default;
import parseDuration from "parse-duration";
//# sourceMappingURL=export.d.ts.map