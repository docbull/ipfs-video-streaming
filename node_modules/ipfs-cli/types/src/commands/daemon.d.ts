declare namespace _default {
    const command: string;
    const describe: string;
    /**
     * @param {import('yargs').Argv} yargs
     */
    function builder(yargs: import("yargs").Argv<any>): import("yargs").Argv<import("yargs").Omit<import("yargs").Omit<import("yargs").Omit<import("yargs").Omit<import("yargs").Omit<import("yargs").Omit<any, "init-config"> & {
        "init-config": string | undefined;
    }, "init-profile"> & {
        "init-profile": string | undefined;
    }, "enable-sharding-experiment"> & {
        "enable-sharding-experiment": boolean;
    }, "offline"> & {
        offline: boolean;
    }, "enable-namesys-pubsub"> & {
        "enable-namesys-pubsub": boolean;
    }, "enable-preload"> & {
        "enable-preload": boolean;
    }>;
    /**
     * @param {import('yargs').Argv} yargs
     */
    function builder(yargs: import("yargs").Argv<any>): import("yargs").Argv<import("yargs").Omit<import("yargs").Omit<import("yargs").Omit<import("yargs").Omit<import("yargs").Omit<import("yargs").Omit<any, "init-config"> & {
        "init-config": string | undefined;
    }, "init-profile"> & {
        "init-profile": string | undefined;
    }, "enable-sharding-experiment"> & {
        "enable-sharding-experiment": boolean;
    }, "offline"> & {
        offline: boolean;
    }, "enable-namesys-pubsub"> & {
        "enable-namesys-pubsub": boolean;
    }, "enable-preload"> & {
        "enable-preload": boolean;
    }>;
    /**
     * @param {object} argv
     * @param {import('../types').Context} argv.ctx
     * @param {string} [argv.initConfig]
     * @param {string[]} [argv.initProfile]
     * @param {boolean} argv.enableShardingExperiment
     * @param {boolean} argv.offline
     * @param {boolean} argv.enableNamesysPubsub
     * @param {boolean} argv.enablePreload
     * @param {boolean} argv.silent
     * @param {boolean} argv.migrate
     * @param {string} argv.pass
     */
    function handler(argv: {
        ctx: import("../types").Context;
        initConfig?: string | undefined;
        initProfile?: string[] | undefined;
        enableShardingExperiment: boolean;
        offline: boolean;
        enableNamesysPubsub: boolean;
        enablePreload: boolean;
        silent: boolean;
        migrate: boolean;
        pass: string;
    }): Promise<void>;
    /**
     * @param {object} argv
     * @param {import('../types').Context} argv.ctx
     * @param {string} [argv.initConfig]
     * @param {string[]} [argv.initProfile]
     * @param {boolean} argv.enableShardingExperiment
     * @param {boolean} argv.offline
     * @param {boolean} argv.enableNamesysPubsub
     * @param {boolean} argv.enablePreload
     * @param {boolean} argv.silent
     * @param {boolean} argv.migrate
     * @param {string} argv.pass
     */
    function handler(argv: {
        ctx: import("../types").Context;
        initConfig?: string | undefined;
        initProfile?: string[] | undefined;
        enableShardingExperiment: boolean;
        offline: boolean;
        enableNamesysPubsub: boolean;
        enablePreload: boolean;
        silent: boolean;
        migrate: boolean;
        pass: string;
    }): Promise<void>;
}
export default _default;
//# sourceMappingURL=daemon.d.ts.map