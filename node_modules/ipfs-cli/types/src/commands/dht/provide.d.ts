declare namespace _default {
    const command: string;
    const describe: string;
    namespace builder {
        namespace key {
            export const type: string;
            export { coerceCID as coerce };
        }
        namespace recursive {
            export const alias: string;
            const recursive_1: string;
            export { recursive_1 as recursive };
            const _default: boolean;
            export { _default as default };
            const type_1: string;
            export { type_1 as type };
        }
        namespace timeout {
            const type_2: string;
            export { type_2 as type };
            export { parseDuration as coerce };
        }
    }
    /**
     * @param {object} argv
     * @param {import('../../types').Context} argv.ctx
     * @param {import('multiformats/cid').CID} argv.key
     * @param {boolean} argv.recursive
     * @param {number} argv.timeout
     */
    function handler({ ctx: { ipfs }, key, recursive, timeout }: {
        ctx: import("../../types").Context;
        key: import("multiformats/cid").CID;
        recursive: boolean;
        timeout: number;
    }): Promise<void>;
    /**
     * @param {object} argv
     * @param {import('../../types').Context} argv.ctx
     * @param {import('multiformats/cid').CID} argv.key
     * @param {boolean} argv.recursive
     * @param {number} argv.timeout
     */
    function handler({ ctx: { ipfs }, key, recursive, timeout }: {
        ctx: import("../../types").Context;
        key: import("multiformats/cid").CID;
        recursive: boolean;
        timeout: number;
    }): Promise<void>;
}
export default _default;
import { coerceCID } from "../../utils.js";
import parseDuration from "parse-duration";
//# sourceMappingURL=provide.d.ts.map