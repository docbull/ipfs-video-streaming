declare namespace _default {
    const command: string;
    const description: string;
    namespace builder {
        namespace count {
            export const alias: string;
            export const type: string;
            const _default: number;
            export { _default as default };
        }
        namespace timeout {
            const type_1: string;
            export { type_1 as type };
            export { parseDuration as coerce };
        }
    }
    /**
     * @param {object} argv
     * @param {import('../types').Context} argv.ctx
     * @param {number} argv.count
     * @param {string} argv.peerId
     * @param {number} argv.timeout
     */
    function handler({ ctx: { ipfs, print }, count, peerId, timeout }: {
        ctx: import("../types").Context;
        count: number;
        peerId: string;
        timeout: number;
    }): Promise<void>;
    /**
     * @param {object} argv
     * @param {import('../types').Context} argv.ctx
     * @param {number} argv.count
     * @param {string} argv.peerId
     * @param {number} argv.timeout
     */
    function handler({ ctx: { ipfs, print }, count, peerId, timeout }: {
        ctx: import("../types").Context;
        count: number;
        peerId: string;
        timeout: number;
    }): Promise<void>;
}
export default _default;
import parseDuration from "parse-duration";
//# sourceMappingURL=ping.d.ts.map