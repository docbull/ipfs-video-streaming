declare namespace _default {
    const command: string;
    const describe: string;
    namespace builder {
        namespace number {
            export const alias: string;
            export const type: string;
            const _default: boolean;
            export { _default as default };
            const describe_1: string;
            export { describe_1 as describe };
        }
        namespace commit {
            const type_1: string;
            export { type_1 as type };
            const _default_1: boolean;
            export { _default_1 as default };
            const describe_2: string;
            export { describe_2 as describe };
        }
        namespace repo {
            const type_2: string;
            export { type_2 as type };
            const _default_2: boolean;
            export { _default_2 as default };
            const describe_3: string;
            export { describe_3 as describe };
        }
        namespace all {
            const type_3: string;
            export { type_3 as type };
            const _default_3: boolean;
            export { _default_3 as default };
            const describe_4: string;
            export { describe_4 as describe };
        }
        namespace timeout {
            const type_4: string;
            export { type_4 as type };
            export { parseDuration as coerce };
        }
    }
    /**
     * @param {object} argv
     * @param {import('../types').Context} argv.ctx
     * @param {boolean} argv.all
     * @param {boolean} argv.commit
     * @param {boolean} argv.repo
     * @param {boolean} argv.number
     * @param {number} argv.timeout
     */
    function handler({ ctx: { print, ipfs }, all, commit, repo, number, timeout }: {
        ctx: import("../types").Context;
        all: boolean;
        commit: boolean;
        repo: boolean;
        number: boolean;
        timeout: number;
    }): Promise<void>;
    /**
     * @param {object} argv
     * @param {import('../types').Context} argv.ctx
     * @param {boolean} argv.all
     * @param {boolean} argv.commit
     * @param {boolean} argv.repo
     * @param {boolean} argv.number
     * @param {number} argv.timeout
     */
    function handler({ ctx: { print, ipfs }, all, commit, repo, number, timeout }: {
        ctx: import("../types").Context;
        all: boolean;
        commit: boolean;
        repo: boolean;
        number: boolean;
        timeout: number;
    }): Promise<void>;
}
export default _default;
import parseDuration from "parse-duration";
//# sourceMappingURL=version.d.ts.map