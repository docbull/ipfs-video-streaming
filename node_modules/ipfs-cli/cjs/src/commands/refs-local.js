'use strict';

var fromString = require('uint8arrays/from-string');
var parseDuration = require('parse-duration');
var base32 = require('multiformats/bases/base32');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var parseDuration__default = /*#__PURE__*/_interopDefaultLegacy(parseDuration);

var refsLocal = {
  command: 'refs-local',
  describe: 'List all local references.',
  epilog: 'CIDs are reconstructed therefore they might differ from those under which the blocks were originally stored.',
  builder: {
    timeout: {
      type: 'string',
      coerce: parseDuration__default["default"]
    },
    multihash: {
      type: 'boolean',
      default: false,
      desc: 'Shows base32 encoded multihashes instead of reconstructed CIDs'
    }
  },
  async handler({
    ctx: {ipfs, print},
    timeout,
    multihash
  }) {
    for await (const {ref, err} of ipfs.refs.local({ timeout })) {
      if (err) {
        print(err.toString(), true, true);
      } else {
        if (multihash) {
          print(base32.base32.encode(fromString.fromString(ref)).toUpperCase());
        } else {
          print(ref);
        }
      }
    }
  }
};

module.exports = refsLocal;
