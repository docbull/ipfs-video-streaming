'use strict';

var index = require('./addrs/index.js');
var parseDuration = require('parse-duration');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var parseDuration__default = /*#__PURE__*/_interopDefaultLegacy(parseDuration);

var swarmAddrs = {
  command: 'addrs',
  describe: '',
  builder(yargs) {
    return yargs.command(index.commands).option('timeout', {
      type: 'string',
      coerce: parseDuration__default["default"]
    });
  },
  async handler({
    ctx: {ipfs, print},
    timeout
  }) {
    const res = await ipfs.swarm.addrs({ timeout });
    const output = res.map(peer => {
      const count = peer.addrs.length;
      const peerAddrs = [`${ peer.id } (${ count })`];
      peer.addrs.forEach(addr => {
        let res;
        try {
          res = addr.decapsulate('ipfs').toString();
        } catch (_) {
          res = addr.toString();
        }
        peerAddrs.push(`\t${ res }`);
      });
      return peerAddrs.join('\n');
    });
    print(output.join('\n'));
  }
};

module.exports = swarmAddrs;
