'use strict';

var mafmt = require('mafmt');
var multiaddr = require('multiaddr');
var parseDuration = require('parse-duration');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var mafmt__default = /*#__PURE__*/_interopDefaultLegacy(mafmt);
var parseDuration__default = /*#__PURE__*/_interopDefaultLegacy(parseDuration);

var swarmPeers = {
  command: 'peers',
  describe: 'List peers with open connections',
  builder: {
    timeout: {
      type: 'string',
      coerce: parseDuration__default["default"]
    }
  },
  async handler({
    ctx: {print, ipfs, isDaemon},
    timeout
  }) {
    if (!isDaemon) {
      throw new Error('This command must be run in online mode. Try running \'ipfs daemon\' first.');
    }
    const result = await ipfs.swarm.peers({ timeout });
    result.forEach(item => {
      let ma = new multiaddr.Multiaddr(`${ item.addr }`);
      if (!mafmt__default["default"].IPFS.matches(ma)) {
        ma = ma.encapsulate(`/ipfs/${ item.peer }`);
      }
      print(`${ ma }`);
    });
  }
};

module.exports = swarmPeers;
