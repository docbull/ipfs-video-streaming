'use strict';

var parseDuration = require('parse-duration');
var utils = require('../../utils.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var parseDuration__default = /*#__PURE__*/_interopDefaultLegacy(parseDuration);

var namePublish = {
  command: 'publish <ipfsPath>',
  describe: 'Publish IPNS names.',
  builder: {
    ipfsPath: { type: 'string' },
    resolve: {
      alias: 'r',
      describe: 'Resolve given path before publishing. Default: true.',
      default: true,
      type: 'boolean'
    },
    lifetime: {
      alias: 't',
      describe: 'Time duration that the record will be valid for. Default: 24h.',
      default: '24h',
      type: 'string'
    },
    key: {
      alias: 'k',
      describe: 'Name of the key to be used, as listed by "ipfs key list -l". Default: self.',
      default: 'self',
      type: 'string'
    },
    ttl: {
      describe: 'Time duration this record should be cached for (caution: experimental).',
      default: '',
      type: 'string'
    },
    timeout: {
      type: 'string',
      coerce: parseDuration__default["default"]
    }
  },
  async handler({
    ctx: {ipfs, print},
    ipfsPath,
    resolve,
    lifetime,
    key,
    ttl,
    timeout
  }) {
    const result = await ipfs.name.publish(ipfsPath, {
      resolve,
      lifetime,
      key,
      ttl,
      timeout
    });
    print(`Published to ${ utils.stripControlCharacters(result.name) }: ${ result.value }`);
  }
};

module.exports = namePublish;
