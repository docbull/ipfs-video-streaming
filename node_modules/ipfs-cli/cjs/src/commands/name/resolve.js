'use strict';

var parseDuration = require('parse-duration');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var parseDuration__default = /*#__PURE__*/_interopDefaultLegacy(parseDuration);

var nameResolve = {
  command: 'resolve <name>',
  describe: 'Resolve IPNS names.',
  builder: {
    nocache: {
      type: 'boolean',
      alias: 'n',
      describe: 'Do not use cached entries. Default: false.',
      default: false
    },
    recursive: {
      type: 'boolean',
      alias: 'r',
      describe: 'Resolve until the result is not an IPNS name. Default: true.',
      default: true
    },
    stream: {
      type: 'boolean',
      alias: 's',
      describe: 'Stream entries as they are found.',
      default: false
    },
    timeout: {
      type: 'string',
      coerce: parseDuration__default["default"]
    }
  },
  async handler({
    ctx: {ipfs, print},
    nocache,
    recursive,
    name,
    stream,
    timeout
  }) {
    let bestValue;
    for await (const value of ipfs.name.resolve(name, {
        nocache,
        recursive,
        timeout
      })) {
      bestValue = value;
      if (stream)
        print(value);
    }
    if (!stream)
      print(bestValue || '');
  }
};

module.exports = nameResolve;
