'use strict';

var JSONDiff = require('jsondiffpatch');
var parseDuration = require('parse-duration');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var JSONDiff__default = /*#__PURE__*/_interopDefaultLegacy(JSONDiff);
var parseDuration__default = /*#__PURE__*/_interopDefaultLegacy(parseDuration);

var configProfileApply = {
  command: 'apply <profile>',
  describe: 'Apply profile to config',
  builder: {
    'dry-run': {
      type: 'boolean',
      describe: 'print difference between the current config and the config that would be generated.',
      default: false
    },
    timeout: {
      type: 'string',
      coerce: parseDuration__default["default"]
    }
  },
  async handler({ctx, profile, dryRun, timeout}) {
    const {print, ipfs, isDaemon} = ctx;
    const diff = await ipfs.config.profiles.apply(profile, {
      dryRun,
      timeout
    });
    const delta = JSONDiff__default["default"].diff(diff.original, diff.updated);
    const res = delta && JSONDiff__default["default"].formatters.console.format(delta, diff.original);
    if (res) {
      print(res);
      if (isDaemon) {
        print('\nThe IPFS daemon is running in the background, you may need to restart it for changes to take effect.');
      }
    } else {
      print(`IPFS config already contains the settings from the '${ profile }' profile`);
    }
  }
};

module.exports = configProfileApply;
