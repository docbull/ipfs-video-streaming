'use strict';

var index = require('./config/index.js');
var parseDuration = require('parse-duration');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var parseDuration__default = /*#__PURE__*/_interopDefaultLegacy(parseDuration);

var config = {
  command: 'config <key> [value]',
  description: 'Get and set IPFS config values.',
  builder: yargs => {
    return yargs.command(index.commands).option('bool', {
      type: 'boolean',
      describe: 'Set a boolean value.',
      default: false
    }).option('json', {
      type: 'boolean',
      describe: 'Parse stringified JSON.',
      default: false
    }).option('timeout', {
      type: 'string',
      coerce: parseDuration__default["default"]
    });
  },
  async handler({
    ctx: {ipfs, print},
    value,
    bool,
    json,
    key,
    timeout
  }) {
    if (!value) {
      value = await ipfs.config.get(key, { timeout });
      if (typeof value === 'object') {
        print(JSON.stringify(value, null, 2));
      } else {
        print(value);
      }
    } else {
      if (bool) {
        value = value === 'true';
      } else if (json) {
        try {
          value = JSON.parse(value);
        } catch (err) {
          throw new Error('invalid JSON provided');
        }
      }
      await ipfs.config.set(key, value, { timeout });
    }
  }
};

module.exports = config;
