'use strict';

var parseDuration = require('parse-duration');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var parseDuration__default = /*#__PURE__*/_interopDefaultLegacy(parseDuration);

var pinRm = {
  command: 'rm <ipfsPath...>',
  describe: 'Unpins the corresponding block making it available for garbage collection',
  builder: {
    recursive: {
      type: 'boolean',
      alias: 'r',
      default: true,
      describe: 'Recursively unpin the objects linked to by the specified object(s).'
    },
    'cid-base': {
      describe: 'Number base to display CIDs in.',
      type: 'string',
      default: 'base58btc'
    },
    timeout: {
      type: 'string',
      coerce: parseDuration__default["default"]
    }
  },
  async handler({ctx, ipfsPath, timeout, recursive, cidBase}) {
    const {ipfs, print} = ctx;
    const base = await ipfs.bases.getBase(cidBase);
    for await (const res of ipfs.pin.rmAll(ipfsPath.map(path => ({
        path,
        recursive
      })), { timeout })) {
      print(`unpinned ${ res.toString(base.encoder) }`);
    }
  }
};

module.exports = pinRm;
