'use strict';

var parseDuration = require('parse-duration');
var utils = require('../../utils.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var parseDuration__default = /*#__PURE__*/_interopDefaultLegacy(parseDuration);

var blockRm = {
  command: 'rm <hash...>',
  describe: 'Remove IPFS block(s)',
  builder: {
    hash: {
      type: 'array',
      coerce: utils.coerceCIDs
    },
    force: {
      alias: 'f',
      describe: 'Ignore nonexistent blocks',
      type: 'boolean',
      default: false
    },
    quiet: {
      alias: 'q',
      describe: 'Write minimal output',
      type: 'boolean',
      default: false
    },
    timeout: {
      type: 'string',
      coerce: parseDuration__default["default"]
    }
  },
  async handler({ctx, hash, force, quiet, timeout}) {
    const {ipfs, print} = ctx;
    let errored = false;
    for await (const result of ipfs.block.rm(hash, {
        force,
        quiet,
        timeout
      })) {
      if (result.error) {
        errored = true;
      }
      if (!quiet) {
        print(result.error ? result.error.message : `removed ${ result.cid }`);
      }
    }
    if (errored && !quiet) {
      throw new Error('some blocks not removed');
    }
  }
};

module.exports = blockRm;
