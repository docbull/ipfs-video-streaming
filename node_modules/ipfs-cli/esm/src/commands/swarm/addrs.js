import { commands } from './addrs/index.js';
import parseDuration from 'parse-duration';
export default {
  command: 'addrs',
  describe: '',
  builder(yargs) {
    return yargs.command(commands).option('timeout', {
      type: 'string',
      coerce: parseDuration
    });
  },
  async handler({
    ctx: {ipfs, print},
    timeout
  }) {
    const res = await ipfs.swarm.addrs({ timeout });
    const output = res.map(peer => {
      const count = peer.addrs.length;
      const peerAddrs = [`${ peer.id } (${ count })`];
      peer.addrs.forEach(addr => {
        let res;
        try {
          res = addr.decapsulate('ipfs').toString();
        } catch (_) {
          res = addr.toString();
        }
        peerAddrs.push(`\t${ res }`);
      });
      return peerAddrs.join('\n');
    });
    print(output.join('\n'));
  }
};