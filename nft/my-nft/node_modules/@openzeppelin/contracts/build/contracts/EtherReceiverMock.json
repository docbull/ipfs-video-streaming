{
  "fileName": "EtherReceiverMock.sol",
  "contractName": "EtherReceiverMock",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\ncontract EtherReceiverMock {\n    bool private _acceptEther;\n\n    function setAcceptEther(bool acceptEther) public {\n        _acceptEther = acceptEther;\n    }\n\n    receive () external payable {\n        if (!_acceptEther) {\n            revert();\n        }\n    }\n}\n",
  "sourcePath": "contracts/mocks/EtherReceiverMock.sol",
  "sourceMap": "58:261:52:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "58:261:52:-:0;;;;;;;;;;;;;;;;;;;;;;;264:12;;;;;;;;;;259:52;;292:8;;;259:52;58:261;;;;;123:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;197:11;182:12;;:26;;;;;;;;;;;;;;;;;;123:92;:::o",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "acceptEther",
          "type": "bool"
        }
      ],
      "name": "setAcceptEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "ast": {
    "absolutePath": "contracts/mocks/EtherReceiverMock.sol",
    "exportedSymbols": {
      "EtherReceiverMock": [
        4958
      ]
    },
    "id": 4959,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4934,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:52"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4958,
        "linearizedBaseContracts": [
          4958
        ],
        "name": "EtherReceiverMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4936,
            "mutability": "mutable",
            "name": "_acceptEther",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4958,
            "src": "91:25:52",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4935,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "91:4:52",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 4945,
              "nodeType": "Block",
              "src": "172:43:52",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4941,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4936,
                      "src": "182:12:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4942,
                      "name": "acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4938,
                      "src": "197:11:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "182:26:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4944,
                  "nodeType": "ExpressionStatement",
                  "src": "182:26:52"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4fea120c",
            "id": 4946,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAcceptEther",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4938,
                  "mutability": "mutable",
                  "name": "acceptEther",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4946,
                  "src": "147:16:52",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4937,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "147:4:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "146:18:52"
            },
            "returnParameters": {
              "id": 4940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "172:0:52"
            },
            "scope": 4958,
            "src": "123:92:52",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4956,
              "nodeType": "Block",
              "src": "249:68:52",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 4950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "263:13:52",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 4949,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4936,
                      "src": "264:12:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4955,
                  "nodeType": "IfStatement",
                  "src": "259:52:52",
                  "trueBody": {
                    "id": 4954,
                    "nodeType": "Block",
                    "src": "278:33:52",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4951,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "292:6:52",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 4952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "292:8:52",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4953,
                        "nodeType": "ExpressionStatement",
                        "src": "292:8:52"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 4957,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:52"
            },
            "returnParameters": {
              "id": 4948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "249:0:52"
            },
            "scope": 4958,
            "src": "221:96:52",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4959,
        "src": "58:261:52"
      }
    ],
    "src": "33:287:52"
  },
  "bytecode": "0x608060405234801561001057600080fd5b5060cb8061001f6000396000f3fe608060405260043610601f5760003560e01c80634fea120c14604057603b565b36603b5760008054906101000a900460ff16603957600080fd5b005b600080fd5b348015604b57600080fd5b50607760048036036020811015606057600080fd5b810190808035151590602001909291905050506079565b005b806000806101000a81548160ff0219169083151502179055505056fea26469706673582212207cc95b53ec3c31b2d6ee878ef53061ab7301df26afe51f9ee1f2f746cea0eac964736f6c63430007000033",
  "deployedBytecode": "0x608060405260043610601f5760003560e01c80634fea120c14604057603b565b36603b5760008054906101000a900460ff16603957600080fd5b005b600080fd5b348015604b57600080fd5b50607760048036036020811015606057600080fd5b810190808035151590602001909291905050506079565b005b806000806101000a81548160ff0219169083151502179055505056fea26469706673582212207cc95b53ec3c31b2d6ee878ef53061ab7301df26afe51f9ee1f2f746cea0eac964736f6c63430007000033",
  "compiler": {
    "name": "solc",
    "version": "0.7.0+commit.9e61f92b.Emscripten.clang",
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "evmVersion": "petersburg"
  }
}
