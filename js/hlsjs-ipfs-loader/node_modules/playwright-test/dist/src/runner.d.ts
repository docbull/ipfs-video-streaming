export class Runner {
    /**
     *
     * @param {Partial<import('./types').RunnerOptions>} [options]
     */
    constructor(options?: Partial<import("./types").RunnerOptions> | undefined);
    /** @type {RunnerOptions} */
    options: RunnerOptions;
    /** @type {import('polka').Polka["server"] | undefined} */
    server: import('polka').Polka["server"] | undefined;
    dir: string;
    browserDir: string;
    url: string;
    stopped: boolean;
    watching: boolean;
    env: any;
    extensions: string[];
    beforeTestsOutput: unknown;
    tests: string[];
    launch(): Promise<import("playwright-core").BrowserContext>;
    browser: import("playwright-core").Browser | undefined;
    context: import("playwright-core").BrowserContext | undefined;
    /**
     * Setup Page
     *
     * @param {Context} context
     */
    setupPage(context: Context): Promise<import("playwright-core").Page>;
    page: import("playwright-core").Page | undefined;
    /**
     * Run the tests
     *
     * @param {Page} page
     */
    runTests(page: Page): Promise<{
        outName: string;
        files: any[];
    }>;
    run(): Promise<void>;
    /**
     * Setup and run before page
     *
     * @param {Context} context
     */
    runBefore(context: Context): Promise<void>;
    watch(): Promise<void>;
    /**
     * @param {boolean} fail
     * @param {string | undefined} [msg]
     */
    stop(fail: boolean, msg?: string | undefined): Promise<void>;
    /**
     * Compile tests
     *
     * @param {"before" | "bundle" | "watch"} mode
     * @returns {Promise<import('./types').CompilerOutput>} file to be loaded in the page
     */
    compiler(mode?: "before" | "bundle" | "watch"): Promise<import('./types').CompilerOutput>;
}
export type Page = import('playwright-core').Page;
export type Context = import('playwright-core').BrowserContext;
export type Browser = import('playwright-core').Browser;
export type RunnerOptions = import('./types').RunnerOptions;
export type ChromiumBrowserContext = import('playwright-core').ChromiumBrowserContext;
//# sourceMappingURL=runner.d.ts.map